{"version":3,"sources":["components/Note/NoteForm/NoteField.js","components/Note/NoteForm/formFields.js","components/Note/NoteForm/NoteForm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/Note/NoteForm/NoteForm.module.css"],"names":["checkInput","input","themes","type","map","theme","value","name","rows","cols","style","marginBottom","connect","state","notes","props","label","color","meta","touched","error","FIELDS","validator","values","errors","formFields","forEach","field","newTypeName","newType","img","token","auth","submitNote","submitEditNote","useState","editValue","setEditValue","idObj","setIDObject","useEffect","searchParams","URLSearchParams","location","search","obj","key","Object","keys","length","choosedTheme","find","_id","themeId","choosedNote","noteCollection","note","noteId","updatedDate","replace","renderFields","component","NoteField","initialValue","onSubmit","a","postData","typeName","detail","title","description","url","history","className","classes","Form","join","validate","render","handleSubmit","invalid","form","disabled","Preview","JSON","stringify","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","module","exports"],"mappings":"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","file":"static/js/9.229b8fbe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst checkInput = (input, themes) => {\r\n    switch (input.type) {\r\n        case ('select'):\r\n            return (\r\n                <Aux>\r\n                    <select  {...input}>\r\n                        <option />\r\n                        {themes.map(theme => {\r\n                            return (\r\n                                <option key={theme.name} value={theme.type}>{theme.name}</option>\r\n                            )\r\n                        })}\r\n                        <option value=\"others\">其他</option>\r\n                    </select>\r\n                </Aux>\r\n\r\n            )\r\n        case ('textarea'):\r\n            return <textarea {...input} rows=\"5\" cols=\"30\" style={{ marginBottom: \"5px\" }} />;\r\n        default:\r\n            return <input {...input}  style={{ marginBottom: \"5px\" }} />;\r\n\r\n    }\r\n}\r\nconst noteField = (props) => {\r\n    // console.log(props)\r\n    return (\r\n        <div >\r\n            <label>{props.label}</label>\r\n            {checkInput(props.input, props.themes)}\r\n            <div style={{ marginBottom: \"5px\", color: \"orangered\" }}>\r\n                {props.meta.touched && props.meta.error}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        themes: state.notes.themes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(noteField);\r\n\r\n","const FIELDS = [\r\n  { label: \"Title\", name: \"title\", type: 'text' },\r\n  { label: \"Description\", name: \"description\", type: 'textarea' },\r\n  { label: \"Markdown URL\", name: \"url\", type: 'text' },\r\n  { label: \"Image URL\", name: \"img\", type: 'text' },\r\n  { label: \"Updated Date\", name: 'updatedDate', type: 'date' },\r\n  { label: \"Type\", name: 'type', type: 'select' },\r\n  { label: \"New Type\", name: 'newType', type: 'text' },\r\n  { label: \"New Type Name\", name: 'newTypeName', type: 'text' },\r\n];\r\n\r\nexport default FIELDS;","import React, { useState, useEffect } from 'react';\r\nimport classes from './NoteForm.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport NoteField from './NoteField';\r\nimport formFields from './formFields';\r\nimport { connect } from 'react-redux';\r\nimport { submitNote, submitEditNote } from '../../../store/actions/note';\r\n\r\nconst validator = (values) => {\r\n    const errors = {};\r\n    formFields.forEach((field) => {\r\n        if (!values[field.name]) {\r\n            errors[field.name] = `You must provide ${field.name}`;\r\n        }\r\n    });\r\n\r\n    if (values.type !== 'others' && values.type) {\r\n        delete errors.newTypeName;\r\n        delete errors.newType;\r\n    }\r\n\r\n    delete errors.img\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nconst NoteForm = (props) => {\r\n    const [editValue, setEditValue] = useState(null);\r\n    const [idObj, setIDObject] = useState(null);\r\n    useEffect(() => {\r\n        const searchParams = new URLSearchParams(props.location.search);\r\n        let obj = {}\r\n        for (let key of searchParams) {\r\n            obj[key[0]] = key[1]\r\n        };\r\n        if (Object.keys(obj).length === 2) {\r\n            setIDObject(obj);\r\n            const choosedTheme = props.themes.find(theme => {\r\n                return theme._id === obj.themeId;\r\n            });\r\n            const choosedNote = choosedTheme.noteCollection.find(note => {\r\n                return note._id === obj.noteId;\r\n            })\r\n            setEditValue({ type: choosedTheme.type, ...choosedNote, updatedDate: choosedNote.updatedDate.replace('T00:00:00.000Z', '') });\r\n        }\r\n    }, [props.location.search,props.themes])\r\n\r\n    const renderFields = (values) => {\r\n        return formFields.map((field) => {\r\n            if ((field.name === \"newType\" || field.name === \"newTypeName\") && values.type !== 'others') return null\r\n            return (\r\n                <Field\r\n                    key={field.name}\r\n                    component={NoteField}\r\n                    initialValue={idObj ? editValue[field.name] : null}\r\n                    type={field.type}\r\n                    label={field.label}\r\n                    name={field.name}\r\n                ></Field>\r\n            );\r\n        });\r\n    }\r\n\r\n    const onSubmit = async (values) => {\r\n        const postData = {\r\n            type: values.type === \"others\" ? values.newType : values.type,\r\n            typeName: values.type === 'others' ? values.newTypeName : null,\r\n            detail: {\r\n                title: values.title,\r\n                description: values.description,\r\n                url: values.url,\r\n                updatedDate: values.updatedDate\r\n            }\r\n        }\r\n        if (values.img) postData.detail.img = values.img;\r\n        if (props.token) {\r\n            if (!idObj) {\r\n                props.submitNote(postData, props.token, props.history)\r\n            } else {\r\n                props.submitEditNote(postData, props.token, props.history, idObj)\r\n\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <div className={[classes.Form, 'Main-Container'].join(' ')}>\r\n            <h1 >{idObj ? 'Edit' : 'Post'} The Note!</h1>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                validate={validator}\r\n                render={({ handleSubmit, form, invalid, values }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        {renderFields(values)}\r\n                        <div >\r\n                            <button type=\"submit\" disabled={invalid}>\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                        <div className={classes.Preview}>\r\n                            <pre >{JSON.stringify(values, 0, 1)}</pre>\r\n                        </div>\r\n\r\n                    </form>\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        themes: state.notes.themes,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { submitNote, submitEditNote })(NoteForm)","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"NoteForm_Form__2NtYk\",\"Preview\":\"NoteForm_Preview__1S3k-\"};"],"sourceRoot":""}