{"version":3,"sources":["components/Auth/AuthPage.module.css","components/Auth/AuthPage.js"],"names":["module","exports","connect","state","auth","signIn","signInSecond","signOut","props","useState","sec","setSec","useEffect","timer","email","setTimeout","prevSec","clearTimeout","history","push","onSubmit","values","a","renderLoader","showLoader","errorMessage","style","color","fontWeight","textAlign","className","classes","AuthPage","join","render","handleSubmit","form","invalid","component","type","name","placeholder","Login","marginRight"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,0B,4ICmHjDC,uBARS,SAACC,GACrB,MAAO,CACHC,KAAMD,EAAMC,QAMoB,CAAEC,WAAQC,iBAAcC,aAAjDL,EA7Gf,SAAkBM,GAAQ,IAAD,EAECC,mBAAS,IAFV,mBAEdC,EAFc,KAETC,EAFS,KAIrBC,qBAAU,WAEN,IAAIC,EAaJ,OAZIL,EAAMJ,KAAKU,QACXD,EAAQE,YAAW,WACfJ,GAAO,SAAAK,GAAO,OAAIA,EAAU,OAC7B,MAGK,IAARN,IACAO,aAAaJ,GACbL,EAAMD,UACNC,EAAMU,QAAQC,KAAK,MAGhB,kBAAMF,aAAaJ,MAC3B,CAACH,EAAKF,IAET,IAAMY,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACbd,EAAMH,OAAOgB,EAAQV,GADR,2CAAH,sDAQRY,EAAe,WACjB,OAAIf,EAAMJ,KAAKoB,WACJ,cAAC,IAAD,IAGPhB,EAAMJ,KAAKqB,aAEP,mBAAGC,MAAO,CAAEC,MAAO,MAAOC,WAAY,OAAQC,UAAW,UAAzD,uCAFR,GAQJ,OAAKrB,EAAMJ,KAAKU,MAiCR,sBAAKgB,UAAW,CAACC,IAAQC,SAAU,kBAAkBC,KAAK,KAA1D,UACI,cAAC,IAAD,CACIb,SApDS,SAACC,GACtBb,EAAMF,aAAae,EAAOb,EAAMU,UAoDpBgB,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,EAAiBC,KAAjB,EAAuBC,QAAvB,EAAgChB,OAAhC,OACJ,uBAAMD,SAAUe,EAAhB,UACI,kDACA,cAAC,IAAD,CACIG,UAAU,QACVC,KAAK,OACLC,KAAK,eACLC,YAAY,KAEhB,wBAAQX,UAAWC,IAAQW,MAAOH,KAAK,SAAvC,kBAGA,+BAAK7B,EAAL,cAIXa,OAlDL,sBAAKO,UAAW,CAACC,IAAQC,SAAU,kBAAkBC,KAAK,KAA1D,UACI,cAAC,IAAD,CACIb,SAAUA,EACVc,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,EAAiBC,KAAjB,EAAuBC,QAAvB,EAAgChB,OAAhC,OACJ,uBAAMD,SAAUe,EAAhB,UACI,0CACA,cAAC,IAAD,CACIG,UAAU,QACVC,KAAK,QACLC,KAAK,QACLC,YAAY,UAEhB,6CACA,cAAC,IAAD,CACIH,UAAU,QACVC,KAAK,WACLC,KAAK,WACLC,YAAY,aAEhB,yBAAQX,UAAWC,IAAQW,MAAOH,KAAK,SAAvC,UACI,mBAAGT,UAAU,qBAAqBJ,MAAO,CAAEiB,YAAa,UAD5D,iBAOXpB","file":"static/js/10.9b9481f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthPage\":\"AuthPage_AuthPage__1BF5A\",\"Login\":\"AuthPage_Login__3OyBV\"};","import React, { useState, useEffect } from 'react'\r\nimport classes from './AuthPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { signIn, signInSecond, signOut } from '../../store/actions/auth';\r\nimport Loader from '../UI/Loader/Loader';\r\n\r\nfunction AuthPage(props) {\r\n\r\n    const [sec, setSec] = useState(60);\r\n\r\n    useEffect(() => {\r\n\r\n        let timer;\r\n        if (props.auth.email) {\r\n            timer = setTimeout(() => {\r\n                setSec(prevSec => prevSec - 1);\r\n            }, 1000)\r\n        }\r\n\r\n        if (sec === 0) {\r\n            clearTimeout(timer);\r\n            props.signOut();\r\n            props.history.push('/');\r\n        }\r\n\r\n        return () => clearTimeout(timer)\r\n    }, [sec, props])\r\n\r\n    const onSubmit = async (values) => {\r\n        props.signIn(values, setSec);\r\n    };\r\n\r\n    const sendVerifyNumber = (values) => {\r\n        props.signInSecond(values,props.history);\r\n    }\r\n\r\n    const renderLoader = () => {\r\n        if (props.auth.showLoader) {\r\n            return <Loader></Loader>\r\n        }\r\n\r\n        if (props.auth.errorMessage) {\r\n            return (\r\n                <p style={{ color: 'red', fontWeight: 'bold', textAlign: 'center' }}>Unable to LogIn  !!!</p>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    if (!props.auth.email) {\r\n        return (\r\n            <div className={[classes.AuthPage, 'Main-Container'].join(' ')}  >\r\n                <Form\r\n                    onSubmit={onSubmit}\r\n                    render={({ handleSubmit, form, invalid, values }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label>Email</label>\r\n                            <Field\r\n                                component=\"input\"\r\n                                type='email'\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                            ></Field>\r\n                            <label>Password</label>\r\n                            <Field\r\n                                component=\"input\"\r\n                                type='password'\r\n                                name=\"password\"\r\n                                placeholder=\"password\"\r\n                            ></Field>\r\n                            <button className={classes.Login} type=\"submit\" >\r\n                                <i className=\"fas fa-sign-in-alt\" style={{ marginRight: '1rem' }}></i>\r\n                                Login\r\n                            </button>\r\n                        </form>\r\n                    )}\r\n                />\r\n                {renderLoader()}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={[classes.AuthPage, 'Main-Container'].join(' ')}  >\r\n                <Form\r\n                    onSubmit={sendVerifyNumber}\r\n                    render={({ handleSubmit, form, invalid, values }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label>Verify Number</label>\r\n                            <Field\r\n                                component=\"input\"\r\n                                type='text'\r\n                                name=\"verifyNumber\"\r\n                                placeholder=\"\"\r\n                            ></Field>\r\n                            <button className={classes.Login} type=\"submit\" >\r\n                                Send\r\n                            </button>\r\n                            <h3>{sec} s</h3>\r\n                        </form>\r\n                    )}\r\n                />\r\n                {renderLoader()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { signIn, signInSecond, signOut })(AuthPage)\r\n"],"sourceRoot":""}